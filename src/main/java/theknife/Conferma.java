/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package theknife;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.Timer;
import static theknife.VisualizzaRistorante.id_rist;

/**
 * Finestra di conferma per eliminare un ristorante.
 * Mostra una pagina semplice per l'accesso di clienti e ristoratori
 *
 * @author Afzal Mahrukh
 * @author Girardi Verdiana
 * @author Syed Zeryab Haider
 * @author Vigano' Luca
 */
public class Conferma extends javax.swing.JFrame {
    /**
     * Variabile privata che memorizza la pagina di origine dalla quale conferma viene chiamata.
     */
    private JFrame mainFrame;
    /**
     * Creates new form Conferma
     * @param mainFrame
     */
    public Conferma(JFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        
        // Quando Conferma viene chiusa si chiude anche la finestra precedente
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                if (mainFrame != null) {
                    mainFrame.dispose();
                }
            }
        });
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Sicuro di voler procedere ?");

        jButton1.setText("Sì");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("No");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Evento attivato quando l'utente preme il bottone "Sì".
     * Gestisce la rimozione dei negozi tramite query SQL al database.
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String url = "jdbc:postgresql://localhost:5432/postgres";
        String user = "postgres";
        String password = "1";
        new Operazione().setVisible(true);
        try {
            // Connessione al database
            Connection conn = DriverManager.getConnection(url, user, password);
            System.out.println("Connessione avvenuta con successo!");
            Statement stmt= conn.createStatement();
            // Query per eliminare il ristorante
            String sql="DELETE FROM ristoranti WHERE id='"+id_rist+"'";
            int rowsAffected = stmt.executeUpdate(sql);
            if(rowsAffected>0){
                new Operazione().setVisible(true);
            }else{
                new Errore("<html>Errore nessun elemento eliminato dal database: </html>").setVisible(true);
            }
            conn.close();
        } catch (SQLException e) {
            // Mostra un errore in una finestra popup in caso di problemi con la connessione o query
            new Errore("<html>Errore durante laconnessione al database: <br>\"" + e.getMessage() + "\"</html>").setVisible(true);
        }
        // Timer che chiude la finestra dopo 1 secondo dall'invio
        Timer timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose(); // Chiude questa finestra
            }
        });
        timer.setRepeats(false); // Si attiva una sola volta
        timer.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Evento attivato quando l'utente preme il bottone "No".
     * gestisce un eventuale ripensamento durante la rimozione dei negozi
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Errore("<html> Operazione annullata </html>").setVisible(true);
        // Timer che chiude la finestra dopo 1 secondo dall'invio
        Timer timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose(); // Chiude questa finestra
                
            }
        });
        timer.setRepeats(false); // Si attiva una sola volta
        timer.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
